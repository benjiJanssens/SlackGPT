service: slackgpt

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  stage: ${env:NODE_ENV}
  region: ${env:AWS_REGION}
  runtime: nodejs18.x
  deploymentMethod: direct
  environment:
    NODE_ENV: ${env:NODE_ENV}
    CRYPTO_KEY: ${env:CRYPTO_KEY}
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_CLIENT_ID: ${env:SLACK_CLIENT_ID}
    SLACK_CLIENT_SECRET: ${env:SLACK_CLIENT_SECRET}
    SLACK_STATE_SECRET: ${env:SLACK_STATE_SECRET}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:resources.Resources.WorkspaceTable.Properties.TableName}

functions:
  slack:
    handler: 'src/index.handler'
    events:
      - http:
          path: slack/events
          method: post
      - http:
          path: slack/install
          method: get
      - http:
          path: slack/oauth_redirect
          method: get

resources:
  Resources:
    WorkspaceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}-workspace
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - development
    start:
      migrate: true
