service: slackgpt

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  stage: prod
  region: ${env:AWS_REGION}
  runtime: nodejs18.x
  deploymentMethod: direct
  environment:
    NODE_ENV: ${env:NODE_ENV}
    CRYPTO_KEY: ${env:CRYPTO_KEY}
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
  custom:
    workspaceTableName: ${self:service}-${self:provider.stage}-workspace
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.workspaceTableName}'

functions:
  slack:
    handler: 'src/index.handler'
    events:
      - http:
          path: slack/events
          method: post

resources:
  Resources:
    WorkspaceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.workspaceTableName}
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
